
0. 0000
00000000 		no op
00000001		user input 
00000010		display r0
00000011		halt
000001**
000011 <ra>		sleep centisec given in ra
000010 <ra>		load immediate 8bit pattern to ra

1. 0001 ra rb		r0 = ra + rb (add)
2. 0010 ra val		r0 = ra + val (addi)
3. 0011 ra rb 	 	r0 = ra - rb (sub)
4. 0100 ra val		r0 = ra - val (subi)
5. 0101 ra rb		{r0,r1} = ra * rb
6. 0110 ra rb		ra = -rb
7. 0111 ra val		right shift ra by val
8. 100 <target>		if r0>=0 goto <target> pc = target
9. 100 <target>
10. 1010 ra rb		ra = rb(move)
11. 1011 (ra) rb	mem[ra] = rb (store)
12. 1100 (ra) rb 	rb = mem[ra] (load)
13. 1101		
14. 1110 j (ra)		jump to address ra(pc = ra)
15. 1111 ra val  	ra = val (loadi)
 
